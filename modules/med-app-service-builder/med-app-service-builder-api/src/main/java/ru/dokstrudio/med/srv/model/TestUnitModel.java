/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package ru.dokstrudio.med.srv.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the TestUnit service. Represents a row in the &quot;med_TestUnit&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link ru.dokstrudio.med.srv.model.impl.TestUnitModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ru.dokstrudio.med.srv.model.impl.TestUnitImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see TestUnit
 * @see ru.dokstrudio.med.srv.model.impl.TestUnitImpl
 * @see ru.dokstrudio.med.srv.model.impl.TestUnitModelImpl
 * @generated
 */
@ProviderType
public interface TestUnitModel extends BaseModel<TestUnit> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a test unit model instance should use the {@link TestUnit} interface instead.
	 */

	/**
	 * Returns the primary key of this test unit.
	 *
	 * @return the primary key of this test unit
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this test unit.
	 *
	 * @param primaryKey the primary key of this test unit
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the test unit ID of this test unit.
	 *
	 * @return the test unit ID of this test unit
	 */
	public long getTestUnitId();

	/**
	 * Sets the test unit ID of this test unit.
	 *
	 * @param testUnitId the test unit ID of this test unit
	 */
	public void setTestUnitId(long testUnitId);

	/**
	 * Returns the number of this test unit.
	 *
	 * @return the number of this test unit
	 */
	public long getNumber();

	/**
	 * Sets the number of this test unit.
	 *
	 * @param number the number of this test unit
	 */
	public void setNumber(long number);

	/**
	 * Returns the specialization ID of this test unit.
	 *
	 * @return the specialization ID of this test unit
	 */
	public int getSpecializationId();

	/**
	 * Sets the specialization ID of this test unit.
	 *
	 * @param specializationId the specialization ID of this test unit
	 */
	public void setSpecializationId(int specializationId);

	/**
	 * Returns the question text of this test unit.
	 *
	 * @return the question text of this test unit
	 */
	@AutoEscape
	public String getQuestionText();

	/**
	 * Sets the question text of this test unit.
	 *
	 * @param questionText the question text of this test unit
	 */
	public void setQuestionText(String questionText);

	/**
	 * Returns the question type of this test unit.
	 *
	 * @return the question type of this test unit
	 */
	public int getQuestionType();

	/**
	 * Sets the question type of this test unit.
	 *
	 * @param questionType the question type of this test unit
	 */
	public void setQuestionType(int questionType);

	/**
	 * Returns the question dl file entry ID of this test unit.
	 *
	 * @return the question dl file entry ID of this test unit
	 */
	public long getQuestionDlFileEntryId();

	/**
	 * Sets the question dl file entry ID of this test unit.
	 *
	 * @param questionDlFileEntryId the question dl file entry ID of this test unit
	 */
	public void setQuestionDlFileEntryId(long questionDlFileEntryId);

	/**
	 * Returns the is actual of this test unit.
	 *
	 * @return the is actual of this test unit
	 */
	public boolean getIsActual();

	/**
	 * Returns <code>true</code> if this test unit is is actual.
	 *
	 * @return <code>true</code> if this test unit is is actual; <code>false</code> otherwise
	 */
	public boolean isIsActual();

	/**
	 * Sets whether this test unit is is actual.
	 *
	 * @param isActual the is actual of this test unit
	 */
	public void setIsActual(boolean isActual);

	/**
	 * Returns the create date of this test unit.
	 *
	 * @return the create date of this test unit
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this test unit.
	 *
	 * @param createDate the create date of this test unit
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this test unit.
	 *
	 * @return the modified date of this test unit
	 */
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this test unit.
	 *
	 * @param modifiedDate the modified date of this test unit
	 */
	public void setModifiedDate(Date modifiedDate);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(ru.dokstrudio.med.srv.model.TestUnit testUnit);

	@Override
	public int hashCode();

	@Override
	public CacheModel<ru.dokstrudio.med.srv.model.TestUnit> toCacheModel();

	@Override
	public ru.dokstrudio.med.srv.model.TestUnit toEscapedModel();

	@Override
	public ru.dokstrudio.med.srv.model.TestUnit toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}